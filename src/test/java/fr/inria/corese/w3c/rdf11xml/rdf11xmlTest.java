package fr.inria.corese.w3c.rdf11xml;

import fr.inria.corese.core.load.LoadException;
import fr.inria.corese.w3cJunitTestsGenerator.w3cTests.TestFileManager;
import fr.inria.corese.w3cJunitTestsGenerator.w3cTests.TestUtils;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.security.NoSuchAlgorithmException;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import org.junit.AssumptionViolatedException;
import org.junit.BeforeClass;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TestWatcher;
import org.junit.runner.Description;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertTrue;

/**
 * Auto-generated JUnit test file for the W3C test suite: https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/manifest.ttl
 * This file was automatically generated by JUnitTestFileGenerator.java.
 * Generation date: 2024-10-25, Time: 16:31:52 Europe/Paris
 */
public class rdf11xmlTest {

    private static final String TEST_REPORT_FILE = Paths.get(System.getProperty("user.dir")).resolve("test/java/fr/inria/corese/w3c/rdf11xml/testReport.csv").toString();
    private static final String MANIFEST_URI = "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/manifest";
    private static final String EARL = "http://www.w3.org/ns/earl#";

    /**
     * Writes the test report to the file testReport.csv.
     *
     * @param testName The name of the test.
     * @param success  The status of the test.
     */
    private void writeTestReport(String testName, String success) {
        try {
            Path testReportPath = Paths.get(TEST_REPORT_FILE);
            Files.createDirectories(testReportPath.getParent());
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ssXXX");
            Files.write(testReportPath, (MANIFEST_URI + "#" + testName + "," + dtf.format(ZonedDateTime.now()) + "," + EARL + success + "\n").getBytes(), StandardOpenOption.APPEND, StandardOpenOption.CREATE);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Rule
    public TestWatcher watcher = new TestWatcher() {

        @Override
        protected void failed(Throwable e, Description description) {
            writeTestReport(description.getMethodName(), "failed");
        }

        @Override
        protected void succeeded(Description description) {
            writeTestReport(description.getMethodName(), "passed");
        }

        @Override
        protected void skipped(AssumptionViolatedException e, Description description) {
            writeTestReport(description.getMethodName(), "untested");
        }
    };

        // Create and clear the test report file
        @BeforeClass
        public static void createTestReportFile() {
            try {
                Path testReportPath = Paths.get(TEST_REPORT_FILE);
                Files.createDirectories(testReportPath.getParent());
                Files.write(testReportPath, "".getBytes());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    // amp-in-url-test001
    // Description: the purpose of this test case is to show how one of XML's Predefined Entities - in this case the ampersand - is represented when it is used in the value of an rdf:about attribute. The ampersand is represented by its numeric character reference as specified in: http://www.w3.org/TR/REC-xml#sec-predefined-ent In the associated N-Triples file, the ampersand will be represented with a single ampersand character (and not the ampersand's numeric character reference). Note: when a XML/HTML browser is used to display this file, a single ampersand character may be displayed and not the ampersand's numeric character reference. In this case, the browser may provide an alternate way to view the file (such as viewing the file's source or saving to a file).
    @Test
    public void rdf11rdfxmlmanifestttlampinurltest001ampinurltest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/amp-in-url/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/amp-in-url/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/amp-in-url/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/amp-in-url/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // datatypes-test001
    // A simple datatype production; a language+datatype production.
    @Test
    public void rdf11rdfxmlmanifestttldatatypestest001datatypestest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/datatypes/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/datatypes/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/datatypes/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/datatypes/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // datatypes-test002
    // A parser is not required to know about well-formed datatyped literals.
    @Test
    public void rdf11rdfxmlmanifestttldatatypestest002datatypestest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/datatypes/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/datatypes/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/datatypes/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/datatypes/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-charmod-literals-test001
    // Does the treatment of literals conform to charmod ? Test for success of legal Normal Form C literal
    @Test
    public void rdf11rdfxmlmanifestttlrdfcharmodliteralstest001rdfcharmodliteralstest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-literals/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-literals/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-literals/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-literals/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-charmod-uris-test001
    // A uriref is allowed to match non-US ASCII forms conforming to Unicode Normal Form C. No escaping algorithm is applied.
    @Test
    public void rdf11rdfxmlmanifestttlrdfcharmoduristest001rdfcharmoduristest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-uris/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-uris/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-uris/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-uris/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-charmod-uris-test002
    // A uriref which already has % escaping is permitted. No unescaping algorithm is applied.
    @Test
    public void rdf11rdfxmlmanifestttlrdfcharmoduristest002rdfcharmoduristest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-uris/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-uris/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-uris/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-charmod-uris/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-containers-syntax-vs-schema-error001
    // rdf:li is not allowed as as an attribute
    @Test
    public void rdf11rdfxmlmanifestttlrdfcontainerssyntaxvsschemaerror001rdfcontainerssyntaxvsschemaerror001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/error001.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdf-containers-syntax-vs-schema-error002
    // rdf:li elements as typed nodes - a bizarre case As specified in http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html is not an error.
    @Test
    public void rdf11rdfxmlmanifestttlrdfcontainerssyntaxvsschemaerror002rdfcontainerssyntaxvsschemaerror002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/error002.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdf-containers-syntax-vs-schema-test001
    // Simple container
    @Test
    public void rdf11rdfxmlmanifestttlrdfcontainerssyntaxvsschematest001rdfcontainerssyntaxvsschematest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-containers-syntax-vs-schema-test002
    // rdf:li is unaffected by other rdf:_nnn properties. This test case is concerned only with defining the triples that this particular example RDF/XML represents. It is not concerned with whether that collection of triples violates any other constraints, e.g. restrictions on the number of rdf:_1 properties that may be defined for a resource.
    @Test
    public void rdf11rdfxmlmanifestttlrdfcontainerssyntaxvsschematest002rdfcontainerssyntaxvsschematest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-containers-syntax-vs-schema-test003
    // rdf:li elements can exist in any description element
    @Test
    public void rdf11rdfxmlmanifestttlrdfcontainerssyntaxvsschematest003rdfcontainerssyntaxvsschematest003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test003.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test003.nt"));
        
        Path convertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedResultFilePath = Path.of("test003.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test003.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test003.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-containers-syntax-vs-schema-test004
    // rdf:li elements match any of the property element productions
    @Test
    public void rdf11rdfxmlmanifestttlrdfcontainerssyntaxvsschematest004rdfcontainerssyntaxvsschematest004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test004.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test004.nt"));
        
        Path convertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedResultFilePath = Path.of("test004.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test004.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test004.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-containers-syntax-vs-schema-test006
    // containers match the typed node production
    @Test
    public void rdf11rdfxmlmanifestttlrdfcontainerssyntaxvsschematest006rdfcontainerssyntaxvsschematest006() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test006.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test006.nt"));
        
        Path convertedActionFilePath = Path.of("test006.rdf");
        Path canonConvertedActionFilePath = Path.of("test006.rdf");
        Path canonConvertedResultFilePath = Path.of("test006.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test006.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test006.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-containers-syntax-vs-schema-test007
    // rdf:li processing within each element is independent
    @Test
    public void rdf11rdfxmlmanifestttlrdfcontainerssyntaxvsschematest007rdfcontainerssyntaxvsschematest007() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test007.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test007.nt"));
        
        Path convertedActionFilePath = Path.of("test007.rdf");
        Path canonConvertedActionFilePath = Path.of("test007.rdf");
        Path canonConvertedResultFilePath = Path.of("test007.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test007.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test007.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-containers-syntax-vs-schema-test008
    // rdf:li processing is per element, not per resource.
    @Test
    public void rdf11rdfxmlmanifestttlrdfcontainerssyntaxvsschematest008rdfcontainerssyntaxvsschematest008() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test008.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test008.nt"));
        
        Path convertedActionFilePath = Path.of("test008.rdf");
        Path canonConvertedActionFilePath = Path.of("test008.rdf");
        Path canonConvertedResultFilePath = Path.of("test008.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test008.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-containers-syntax-vs-schema/test008.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-element-not-mandatory-test001
    // A surrounding rdf:RDF element is no longer mandatory.
    @Test
    public void rdf11rdfxmlmanifestttlrdfelementnotmandatorytest001rdfelementnotmandatorytest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-element-not-mandatory/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-element-not-mandatory/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-element-not-mandatory/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-element-not-mandatory/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0001
    // RDF attributes that are required to have an rdf: prefix about aboutEach ID bagID type resource parseType
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0001rdfnsprefixconfusiontest0001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0001.nt"));
        
        Path convertedActionFilePath = Path.of("test0001.rdf");
        Path canonConvertedActionFilePath = Path.of("test0001.rdf");
        Path canonConvertedResultFilePath = Path.of("test0001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0003
    // RDF attributes that are required to have an rdf: prefix about aboutEach ID bagID type resource parseType
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0003rdfnsprefixconfusiontest0003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0003.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0003.nt"));
        
        Path convertedActionFilePath = Path.of("test0003.rdf");
        Path canonConvertedActionFilePath = Path.of("test0003.rdf");
        Path canonConvertedResultFilePath = Path.of("test0003.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0003.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0003.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0004
    // RDF attributes that are required to have an rdf: prefix about aboutEach ID bagID type resource parseType
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0004rdfnsprefixconfusiontest0004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0004.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0004.nt"));
        
        Path convertedActionFilePath = Path.of("test0004.rdf");
        Path canonConvertedActionFilePath = Path.of("test0004.rdf");
        Path canonConvertedResultFilePath = Path.of("test0004.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0004.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0004.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0005
    // RDF attributes that are required to have an rdf: prefix about aboutEach ID bagID type resource parseType
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0005rdfnsprefixconfusiontest0005() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0005.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0005.nt"));
        
        Path convertedActionFilePath = Path.of("test0005.rdf");
        Path canonConvertedActionFilePath = Path.of("test0005.rdf");
        Path canonConvertedResultFilePath = Path.of("test0005.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0005.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0005.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0006
    // RDF attributes that are required to have an rdf: prefix about aboutEach ID bagID type resource parseType
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0006rdfnsprefixconfusiontest0006() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0006.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0006.nt"));
        
        Path convertedActionFilePath = Path.of("test0006.rdf");
        Path canonConvertedActionFilePath = Path.of("test0006.rdf");
        Path canonConvertedResultFilePath = Path.of("test0006.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0006.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0006.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0009
    // Namespace qualification MUST be used for all property attributes.
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0009rdfnsprefixconfusiontest0009() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0009.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0009.nt"));
        
        Path convertedActionFilePath = Path.of("test0009.rdf");
        Path canonConvertedActionFilePath = Path.of("test0009.rdf");
        Path canonConvertedResultFilePath = Path.of("test0009.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0009.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0009.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0010
    // Non-prefixed RDF elements (NOT attributes) are allowed when a default XML element namespace is defined with an xmlns="http://www.w3.org/1999/02/22-rdf-syntax-ns#" attribute.
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0010rdfnsprefixconfusiontest0010() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0010.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0010.nt"));
        
        Path convertedActionFilePath = Path.of("test0010.rdf");
        Path canonConvertedActionFilePath = Path.of("test0010.rdf");
        Path canonConvertedResultFilePath = Path.of("test0010.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0010.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0010.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0011
    // Non-prefixed RDF elements (NOT attributes) are allowed when a default XML element namespace is defined with an xmlns="http://www.w3.org/1999/02/22-rdf-syntax-ns#" attribute.
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0011rdfnsprefixconfusiontest0011() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0011.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0011.nt"));
        
        Path convertedActionFilePath = Path.of("test0011.rdf");
        Path canonConvertedActionFilePath = Path.of("test0011.rdf");
        Path canonConvertedResultFilePath = Path.of("test0011.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0011.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0011.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0012
    // Non-prefixed RDF elements (NOT attributes) are allowed when a default XML element namespace is defined with an xmlns="http://www.w3.org/1999/02/22-rdf-syntax-ns#" attribute.
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0012rdfnsprefixconfusiontest0012() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0012.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0012.nt"));
        
        Path convertedActionFilePath = Path.of("test0012.rdf");
        Path canonConvertedActionFilePath = Path.of("test0012.rdf");
        Path canonConvertedResultFilePath = Path.of("test0012.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0012.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0012.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0013
    // Non-prefixed RDF elements (NOT attributes) are allowed when a default XML element namespace is defined with an xmlns="http://www.w3.org/1999/02/22-rdf-syntax-ns#" attribute.
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0013rdfnsprefixconfusiontest0013() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0013.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0013.nt"));
        
        Path convertedActionFilePath = Path.of("test0013.rdf");
        Path canonConvertedActionFilePath = Path.of("test0013.rdf");
        Path canonConvertedResultFilePath = Path.of("test0013.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0013.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0013.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdf-ns-prefix-confusion-test0014
    // Non-prefixed RDF elements (NOT attributes) are allowed when a default XML element namespace is defined with an xmlns="http://www.w3.org/1999/02/22-rdf-syntax-ns#" attribute.
    @Test
    public void rdf11rdfxmlmanifestttlrdfnsprefixconfusiontest0014rdfnsprefixconfusiontest0014() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0014.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0014.nt"));
        
        Path convertedActionFilePath = Path.of("test0014.rdf");
        Path canonConvertedActionFilePath = Path.of("test0014.rdf");
        Path canonConvertedResultFilePath = Path.of("test0014.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0014.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdf-ns-prefix-confusion/test0014.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-abouteach-error001
    // aboutEach removed from the RDF specifications. See URI above for further details.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsabouteacherror001rdfmsabouteacherror001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-abouteach/error001.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-abouteach-error002
    // aboutEach removed from the RDF specifications. See URI above for further details.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsabouteacherror002rdfmsabouteacherror002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-abouteach/error002.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-difference-between-ID-and-about-error1
    // two elements cannot use the same ID
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsdifferencebetweenidandabouterror1rdfmsdifferencebetweenidandabouterror1() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/error1.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-difference-between-ID-and-about-test1
    // A statement with an rdf:ID creates a regular triple.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsdifferencebetweenidandabouttest1rdfmsdifferencebetweenidandabouttest1() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test1.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test1.nt"));
        
        Path convertedActionFilePath = Path.of("test1.rdf");
        Path canonConvertedActionFilePath = Path.of("test1.rdf");
        Path canonConvertedResultFilePath = Path.of("test1.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test1.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test1.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-difference-between-ID-and-about-test2
    // This test shows the treatment of non-ASCII characters in the value of rdf:ID attribute.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsdifferencebetweenidandabouttest2rdfmsdifferencebetweenidandabouttest2() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test2.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test2.nt"));
        
        Path convertedActionFilePath = Path.of("test2.rdf");
        Path canonConvertedActionFilePath = Path.of("test2.rdf");
        Path canonConvertedResultFilePath = Path.of("test2.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test2.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test2.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-difference-between-ID-and-about-test3
    // This test shows the treatment of non-ASCII characters in the value of rdf:about attribute.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsdifferencebetweenidandabouttest3rdfmsdifferencebetweenidandabouttest3() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test3.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test3.nt"));
        
        Path convertedActionFilePath = Path.of("test3.rdf");
        Path canonConvertedActionFilePath = Path.of("test3.rdf");
        Path canonConvertedResultFilePath = Path.of("test3.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test3.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-difference-between-ID-and-about/test3.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-duplicate-member-props-test001
    // The question posed to the RDF WG was: should an RDF document containing multiple rdf:_n properties (with the same n) on an element be rejected as illegal? The WG decided that a parser should accept that case as legal RDF.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsduplicatememberpropstest001rdfmsduplicatememberpropstest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-duplicate-member-props/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-duplicate-member-props/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-duplicate-member-props/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-duplicate-member-props/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-error001
    // This is not legal RDF; specifying an rdf:parseType of "Literal" and an rdf:resource attribute at the same time is an error.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementserror001rdfmsemptypropertyelementserror001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/error001.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-empty-property-elements-error002
    // This is not legal RDF; specifying an rdf:parseType of "Literal" and an rdf:resource attribute at the same time is an error.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementserror002rdfmsemptypropertyelementserror002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/error002.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-empty-property-elements-test001
    // The rdf:resource attribute means that the value of this property element is a resource.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest001rdfmsemptypropertyelementstest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test002
    // The basic case. An empty property element just gives an empty literal.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest002rdfmsemptypropertyelementstest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test004
    // If the parseType indicates the value is a resource, we must create one. With no additional information, the resource is anonymous.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest004rdfmsemptypropertyelementstest004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test004.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test004.nt"));
        
        Path convertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedResultFilePath = Path.of("test004.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test004.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test004.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test005
    // An empty property element just gives an empty literal. We reify the statement at the same time.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest005rdfmsemptypropertyelementstest005() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test005.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test005.nt"));
        
        Path convertedActionFilePath = Path.of("test005.rdf");
        Path canonConvertedActionFilePath = Path.of("test005.rdf");
        Path canonConvertedResultFilePath = Path.of("test005.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test005.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test005.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test006
    // Here the parseType indicates that we should create a resource. We also reify the generated statement.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest006rdfmsemptypropertyelementstest006() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test006.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test006.nt"));
        
        Path convertedActionFilePath = Path.of("test006.rdf");
        Path canonConvertedActionFilePath = Path.of("test006.rdf");
        Path canonConvertedResultFilePath = Path.of("test006.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test006.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test006.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test007
    // As test001.rdf; this uses an explicit closing tag.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest007rdfmsemptypropertyelementstest007() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test007.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test007.nt"));
        
        Path convertedActionFilePath = Path.of("test007.rdf");
        Path canonConvertedActionFilePath = Path.of("test007.rdf");
        Path canonConvertedResultFilePath = Path.of("test007.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test007.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test007.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test008
    // As test002.rdf; this uses an explicit closing tag.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest008rdfmsemptypropertyelementstest008() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test008.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test008.nt"));
        
        Path convertedActionFilePath = Path.of("test008.rdf");
        Path canonConvertedActionFilePath = Path.of("test008.rdf");
        Path canonConvertedResultFilePath = Path.of("test008.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test008.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test008.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test010
    // As test004.rdf; this uses an explicit closing tag.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest010rdfmsemptypropertyelementstest010() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test010.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test010.nt"));
        
        Path convertedActionFilePath = Path.of("test010.rdf");
        Path canonConvertedActionFilePath = Path.of("test010.rdf");
        Path canonConvertedResultFilePath = Path.of("test010.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test010.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test010.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test011
    // As test005.rdf; this uses an explicit closing tag.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest011rdfmsemptypropertyelementstest011() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test011.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test011.nt"));
        
        Path convertedActionFilePath = Path.of("test011.rdf");
        Path canonConvertedActionFilePath = Path.of("test011.rdf");
        Path canonConvertedResultFilePath = Path.of("test011.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test011.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test011.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test012
    // As test006.rdf; this uses an explicit closing tag.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest012rdfmsemptypropertyelementstest012() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test012.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test012.nt"));
        
        Path convertedActionFilePath = Path.of("test012.rdf");
        Path canonConvertedActionFilePath = Path.of("test012.rdf");
        Path canonConvertedResultFilePath = Path.of("test012.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test012.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test012.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test013
    // Test of the last alternative for production [6.12], interpreted according to RDFMS paragraphs 229-234: http://lists.w3.org/Archives/Public/www-archive/2001Jun/att-0021/00-part#229
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest013rdfmsemptypropertyelementstest013() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test013.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test013.nt"));
        
        Path convertedActionFilePath = Path.of("test013.rdf");
        Path canonConvertedActionFilePath = Path.of("test013.rdf");
        Path canonConvertedResultFilePath = Path.of("test013.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test013.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test013.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test014
    // Test of the last alternative for production [6.12], interpreted according to RDFMS paragraphs 229-234: http://lists.w3.org/Archives/Public/www-archive/2001Jun/att-0021/00-part#229
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest014rdfmsemptypropertyelementstest014() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test014.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test014.nt"));
        
        Path convertedActionFilePath = Path.of("test014.rdf");
        Path canonConvertedActionFilePath = Path.of("test014.rdf");
        Path canonConvertedResultFilePath = Path.of("test014.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test014.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test014.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test015
    // Test of the last alternative for production [6.12], interpreted according to RDFMS paragraphs 229-234: http://lists.w3.org/Archives/Public/www-archive/2001Jun/att-0021/00-part#229 Here we have an explicit closing tag. This does not match any of the productions in the original document, but is indistinguishable from test014 as far as XML is concerned.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest015rdfmsemptypropertyelementstest015() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test015.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test015.nt"));
        
        Path convertedActionFilePath = Path.of("test015.rdf");
        Path canonConvertedActionFilePath = Path.of("test015.rdf");
        Path canonConvertedResultFilePath = Path.of("test015.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test015.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test015.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test016
    // Like rdfms-empty-property-elements/test001.rdf but with a processing instruction as the only content of the otherwise empty element.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest016rdfmsemptypropertyelementstest016() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test016.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test016.nt"));
        
        Path convertedActionFilePath = Path.of("test016.rdf");
        Path canonConvertedActionFilePath = Path.of("test016.rdf");
        Path canonConvertedResultFilePath = Path.of("test016.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test016.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test016.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-empty-property-elements-test017
    // Like rdfms-empty-property-elements/test001.rdf but with a comment as the only content of the otherwise empty element.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsemptypropertyelementstest017rdfmsemptypropertyelementstest017() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test017.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test017.nt"));
        
        Path convertedActionFilePath = Path.of("test017.rdf");
        Path canonConvertedActionFilePath = Path.of("test017.rdf");
        Path canonConvertedResultFilePath = Path.of("test017.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test017.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-empty-property-elements/test017.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-identity-anon-resources-test001
    // a RDF Description with no ID or about attribute describes an un-named resource, aka a bNode.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsidentityanonresourcestest001rdfmsidentityanonresourcestest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-identity-anon-resources-test002
    // a RDF Description with no ID or about attribute describes an un-named resource, aka a bNode.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsidentityanonresourcestest002rdfmsidentityanonresourcestest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-identity-anon-resources-test003
    // a RDF container (in this case a Bag) without an ID attribute describes an un-named resource, aka a bNode.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsidentityanonresourcestest003rdfmsidentityanonresourcestest003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test003.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test003.nt"));
        
        Path convertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedResultFilePath = Path.of("test003.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test003.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test003.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-identity-anon-resources-test004
    // a RDF container (in this case an Alt) without an ID attribute describes an un-named resource, aka a bNode.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsidentityanonresourcestest004rdfmsidentityanonresourcestest004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test004.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test004.nt"));
        
        Path convertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedResultFilePath = Path.of("test004.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test004.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test004.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-identity-anon-resources-test005
    // a RDF container (in this case an Seq) without an ID attribute describes an un-named resource, aka a bNode.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsidentityanonresourcestest005rdfmsidentityanonresourcestest005() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test005.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test005.nt"));
        
        Path convertedActionFilePath = Path.of("test005.rdf");
        Path canonConvertedActionFilePath = Path.of("test005.rdf");
        Path canonConvertedResultFilePath = Path.of("test005.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test005.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-identity-anon-resources/test005.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-not-id-and-resource-attr-test001
    // rdf:ID on an empty property element indicates reification.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsnotidandresourceattrtest001rdfmsnotidandresourceattrtest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-not-id-and-resource-attr-test002
    // rdf:reource on an empty property element indicates the URI of the object.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsnotidandresourceattrtest002rdfmsnotidandresourceattrtest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-not-id-and-resource-attr-test004
    // rdf:ID and rdf:resource are allowed together on empty property element.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsnotidandresourceattrtest004rdfmsnotidandresourceattrtest004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test004.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test004.nt"));
        
        Path convertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedResultFilePath = Path.of("test004.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test004.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test004.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-not-id-and-resource-attr-test005
    // rdf:ID and rdf:resource are allowed together on empty property element.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsnotidandresourceattrtest005rdfmsnotidandresourceattrtest005() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test005.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test005.nt"));
        
        Path convertedActionFilePath = Path.of("test005.rdf");
        Path canonConvertedActionFilePath = Path.of("test005.rdf");
        Path canonConvertedResultFilePath = Path.of("test005.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test005.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-not-id-and-resource-attr/test005.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-para196-test001
    // test case showing that the 2nd URI in M Paragraph 196 is permitted as a namespace URI (and any namespace URI starting with that URI)
    @Test
    public void rdf11rdfxmlmanifestttlrdfmspara196test001rdfmspara196test001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-para196/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-para196/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-para196/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-para196/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-id-error001
    // The value of rdf:ID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfiderror001rdfmsrdfiderror001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-id/error001.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-id-error002
    // The value of rdf:ID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfiderror002rdfmsrdfiderror002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-id/error002.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-id-error003
    // The value of rdf:ID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfiderror003rdfmsrdfiderror003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-id/error003.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-id-error004
    // The value of rdf:ID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfiderror004rdfmsrdfiderror004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-id/error004.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-id-error005
    // The value of rdf:ID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfiderror005rdfmsrdfiderror005() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-id/error005.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-id-error006
    // The value of rdf:bagID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfiderror006rdfmsrdfiderror006() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-id/error006.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-id-error007
    // The value of rdf:bagID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfiderror007rdfmsrdfiderror007() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-id/error007.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-001
    // RDF is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror001rdfmsrdfnamesuseerror001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-001.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-002
    // ID is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror002rdfmsrdfnamesuseerror002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-002.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-003
    // about is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror003rdfmsrdfnamesuseerror003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-003.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-004
    // bagID is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror004rdfmsrdfnamesuseerror004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-004.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-005
    // parseType is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror005rdfmsrdfnamesuseerror005() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-005.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-006
    // resource is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror006rdfmsrdfnamesuseerror006() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-006.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-007
    // nodeID is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror007rdfmsrdfnamesuseerror007() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-007.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-008
    // li is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror008rdfmsrdfnamesuseerror008() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-008.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-009
    // aboutEach is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror009rdfmsrdfnamesuseerror009() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-009.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-010
    // aboutEachPrefix is forbidden as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror010rdfmsrdfnamesuseerror010() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-010.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-011
    // Description is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror011rdfmsrdfnamesuseerror011() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-011.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-012
    // RDF is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror012rdfmsrdfnamesuseerror012() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-012.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-013
    // ID is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror013rdfmsrdfnamesuseerror013() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-013.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-014
    // about is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror014rdfmsrdfnamesuseerror014() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-014.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-015
    // bagID is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror015rdfmsrdfnamesuseerror015() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-015.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-016
    // parseType is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror016rdfmsrdfnamesuseerror016() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-016.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-017
    // resource is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror017rdfmsrdfnamesuseerror017() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-017.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-018
    // nodeID is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror018rdfmsrdfnamesuseerror018() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-018.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-019
    // aboutEach is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror019rdfmsrdfnamesuseerror019() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-019.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-error-020
    // aboutEachPrefix is forbidden as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesuseerror020rdfmsrdfnamesuseerror020() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/error-020.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-rdf-names-use-test-001
    // Description is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest001rdfmsrdfnamesusetest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-001.nt"));
        
        Path convertedActionFilePath = Path.of("test-001.rdf");
        Path canonConvertedActionFilePath = Path.of("test-001.rdf");
        Path canonConvertedResultFilePath = Path.of("test-001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-002
    // Seq is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest002rdfmsrdfnamesusetest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-002.nt"));
        
        Path convertedActionFilePath = Path.of("test-002.rdf");
        Path canonConvertedActionFilePath = Path.of("test-002.rdf");
        Path canonConvertedResultFilePath = Path.of("test-002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-003
    // Bag is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest003rdfmsrdfnamesusetest003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-003.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-003.nt"));
        
        Path convertedActionFilePath = Path.of("test-003.rdf");
        Path canonConvertedActionFilePath = Path.of("test-003.rdf");
        Path canonConvertedResultFilePath = Path.of("test-003.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-003.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-003.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-004
    // Alt is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest004rdfmsrdfnamesusetest004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-004.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-004.nt"));
        
        Path convertedActionFilePath = Path.of("test-004.rdf");
        Path canonConvertedActionFilePath = Path.of("test-004.rdf");
        Path canonConvertedResultFilePath = Path.of("test-004.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-004.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-004.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-005
    // Statement is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest005rdfmsrdfnamesusetest005() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-005.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-005.nt"));
        
        Path convertedActionFilePath = Path.of("test-005.rdf");
        Path canonConvertedActionFilePath = Path.of("test-005.rdf");
        Path canonConvertedResultFilePath = Path.of("test-005.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-005.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-005.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-006
    // Property is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest006rdfmsrdfnamesusetest006() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-006.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-006.nt"));
        
        Path convertedActionFilePath = Path.of("test-006.rdf");
        Path canonConvertedActionFilePath = Path.of("test-006.rdf");
        Path canonConvertedResultFilePath = Path.of("test-006.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-006.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-006.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-007
    // List is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest007rdfmsrdfnamesusetest007() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-007.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-007.nt"));
        
        Path convertedActionFilePath = Path.of("test-007.rdf");
        Path canonConvertedActionFilePath = Path.of("test-007.rdf");
        Path canonConvertedResultFilePath = Path.of("test-007.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-007.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-007.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-008
    // subject is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest008rdfmsrdfnamesusetest008() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-008.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-008.nt"));
        
        Path convertedActionFilePath = Path.of("test-008.rdf");
        Path canonConvertedActionFilePath = Path.of("test-008.rdf");
        Path canonConvertedResultFilePath = Path.of("test-008.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-008.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-008.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-009
    // predicate is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest009rdfmsrdfnamesusetest009() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-009.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-009.nt"));
        
        Path convertedActionFilePath = Path.of("test-009.rdf");
        Path canonConvertedActionFilePath = Path.of("test-009.rdf");
        Path canonConvertedResultFilePath = Path.of("test-009.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-009.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-009.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-010
    // object is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest010rdfmsrdfnamesusetest010() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-010.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-010.nt"));
        
        Path convertedActionFilePath = Path.of("test-010.rdf");
        Path canonConvertedActionFilePath = Path.of("test-010.rdf");
        Path canonConvertedResultFilePath = Path.of("test-010.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-010.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-010.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-011
    // type is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest011rdfmsrdfnamesusetest011() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-011.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-011.nt"));
        
        Path convertedActionFilePath = Path.of("test-011.rdf");
        Path canonConvertedActionFilePath = Path.of("test-011.rdf");
        Path canonConvertedResultFilePath = Path.of("test-011.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-011.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-011.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-012
    // value is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest012rdfmsrdfnamesusetest012() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-012.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-012.nt"));
        
        Path convertedActionFilePath = Path.of("test-012.rdf");
        Path canonConvertedActionFilePath = Path.of("test-012.rdf");
        Path canonConvertedResultFilePath = Path.of("test-012.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-012.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-012.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-013
    // first is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest013rdfmsrdfnamesusetest013() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-013.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-013.nt"));
        
        Path convertedActionFilePath = Path.of("test-013.rdf");
        Path canonConvertedActionFilePath = Path.of("test-013.rdf");
        Path canonConvertedResultFilePath = Path.of("test-013.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-013.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-013.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-014
    // rest is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest014rdfmsrdfnamesusetest014() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-014.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-014.nt"));
        
        Path convertedActionFilePath = Path.of("test-014.rdf");
        Path canonConvertedActionFilePath = Path.of("test-014.rdf");
        Path canonConvertedResultFilePath = Path.of("test-014.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-014.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-014.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-015
    // _1 is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest015rdfmsrdfnamesusetest015() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-015.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-015.nt"));
        
        Path convertedActionFilePath = Path.of("test-015.rdf");
        Path canonConvertedActionFilePath = Path.of("test-015.rdf");
        Path canonConvertedResultFilePath = Path.of("test-015.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-015.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-015.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-016
    // nil is allowed as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest016rdfmsrdfnamesusetest016() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-016.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-016.nt"));
        
        Path convertedActionFilePath = Path.of("test-016.rdf");
        Path canonConvertedActionFilePath = Path.of("test-016.rdf");
        Path canonConvertedResultFilePath = Path.of("test-016.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-016.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-016.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-017
    // Seq is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest017rdfmsrdfnamesusetest017() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-017.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-017.nt"));
        
        Path convertedActionFilePath = Path.of("test-017.rdf");
        Path canonConvertedActionFilePath = Path.of("test-017.rdf");
        Path canonConvertedResultFilePath = Path.of("test-017.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-017.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-017.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-018
    // Bag is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest018rdfmsrdfnamesusetest018() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-018.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-018.nt"));
        
        Path convertedActionFilePath = Path.of("test-018.rdf");
        Path canonConvertedActionFilePath = Path.of("test-018.rdf");
        Path canonConvertedResultFilePath = Path.of("test-018.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-018.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-018.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-019
    // Alt is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest019rdfmsrdfnamesusetest019() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-019.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-019.nt"));
        
        Path convertedActionFilePath = Path.of("test-019.rdf");
        Path canonConvertedActionFilePath = Path.of("test-019.rdf");
        Path canonConvertedResultFilePath = Path.of("test-019.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-019.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-019.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-020
    // Statement is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest020rdfmsrdfnamesusetest020() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-020.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-020.nt"));
        
        Path convertedActionFilePath = Path.of("test-020.rdf");
        Path canonConvertedActionFilePath = Path.of("test-020.rdf");
        Path canonConvertedResultFilePath = Path.of("test-020.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-020.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-020.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-021
    // Property is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest021rdfmsrdfnamesusetest021() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-021.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-021.nt"));
        
        Path convertedActionFilePath = Path.of("test-021.rdf");
        Path canonConvertedActionFilePath = Path.of("test-021.rdf");
        Path canonConvertedResultFilePath = Path.of("test-021.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-021.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-021.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-022
    // List is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest022rdfmsrdfnamesusetest022() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-022.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-022.nt"));
        
        Path convertedActionFilePath = Path.of("test-022.rdf");
        Path canonConvertedActionFilePath = Path.of("test-022.rdf");
        Path canonConvertedResultFilePath = Path.of("test-022.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-022.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-022.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-023
    // subject is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest023rdfmsrdfnamesusetest023() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-023.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-023.nt"));
        
        Path convertedActionFilePath = Path.of("test-023.rdf");
        Path canonConvertedActionFilePath = Path.of("test-023.rdf");
        Path canonConvertedResultFilePath = Path.of("test-023.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-023.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-023.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-024
    // predicate is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest024rdfmsrdfnamesusetest024() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-024.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-024.nt"));
        
        Path convertedActionFilePath = Path.of("test-024.rdf");
        Path canonConvertedActionFilePath = Path.of("test-024.rdf");
        Path canonConvertedResultFilePath = Path.of("test-024.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-024.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-024.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-025
    // object is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest025rdfmsrdfnamesusetest025() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-025.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-025.nt"));
        
        Path convertedActionFilePath = Path.of("test-025.rdf");
        Path canonConvertedActionFilePath = Path.of("test-025.rdf");
        Path canonConvertedResultFilePath = Path.of("test-025.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-025.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-025.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-026
    // type is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest026rdfmsrdfnamesusetest026() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-026.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-026.nt"));
        
        Path convertedActionFilePath = Path.of("test-026.rdf");
        Path canonConvertedActionFilePath = Path.of("test-026.rdf");
        Path canonConvertedResultFilePath = Path.of("test-026.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-026.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-026.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-027
    // value is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest027rdfmsrdfnamesusetest027() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-027.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-027.nt"));
        
        Path convertedActionFilePath = Path.of("test-027.rdf");
        Path canonConvertedActionFilePath = Path.of("test-027.rdf");
        Path canonConvertedResultFilePath = Path.of("test-027.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-027.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-027.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-028
    // first is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest028rdfmsrdfnamesusetest028() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-028.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-028.nt"));
        
        Path convertedActionFilePath = Path.of("test-028.rdf");
        Path canonConvertedActionFilePath = Path.of("test-028.rdf");
        Path canonConvertedResultFilePath = Path.of("test-028.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-028.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-028.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-029
    // rest is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest029rdfmsrdfnamesusetest029() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-029.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-029.nt"));
        
        Path convertedActionFilePath = Path.of("test-029.rdf");
        Path canonConvertedActionFilePath = Path.of("test-029.rdf");
        Path canonConvertedResultFilePath = Path.of("test-029.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-029.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-029.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-030
    // _1 is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest030rdfmsrdfnamesusetest030() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-030.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-030.nt"));
        
        Path convertedActionFilePath = Path.of("test-030.rdf");
        Path canonConvertedActionFilePath = Path.of("test-030.rdf");
        Path canonConvertedResultFilePath = Path.of("test-030.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-030.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-030.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-031
    // li is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest031rdfmsrdfnamesusetest031() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-031.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-031.nt"));
        
        Path convertedActionFilePath = Path.of("test-031.rdf");
        Path canonConvertedActionFilePath = Path.of("test-031.rdf");
        Path canonConvertedResultFilePath = Path.of("test-031.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-031.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-031.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-032
    // Seq is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest032rdfmsrdfnamesusetest032() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-032.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-032.nt"));
        
        Path convertedActionFilePath = Path.of("test-032.rdf");
        Path canonConvertedActionFilePath = Path.of("test-032.rdf");
        Path canonConvertedResultFilePath = Path.of("test-032.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-032.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-032.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-033
    // Bag is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest033rdfmsrdfnamesusetest033() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-033.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-033.nt"));
        
        Path convertedActionFilePath = Path.of("test-033.rdf");
        Path canonConvertedActionFilePath = Path.of("test-033.rdf");
        Path canonConvertedResultFilePath = Path.of("test-033.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-033.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-033.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-034
    // Alt is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest034rdfmsrdfnamesusetest034() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-034.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-034.nt"));
        
        Path convertedActionFilePath = Path.of("test-034.rdf");
        Path canonConvertedActionFilePath = Path.of("test-034.rdf");
        Path canonConvertedResultFilePath = Path.of("test-034.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-034.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-034.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-035
    // Statement is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest035rdfmsrdfnamesusetest035() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-035.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-035.nt"));
        
        Path convertedActionFilePath = Path.of("test-035.rdf");
        Path canonConvertedActionFilePath = Path.of("test-035.rdf");
        Path canonConvertedResultFilePath = Path.of("test-035.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-035.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-035.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-036
    // Property is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest036rdfmsrdfnamesusetest036() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-036.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-036.nt"));
        
        Path convertedActionFilePath = Path.of("test-036.rdf");
        Path canonConvertedActionFilePath = Path.of("test-036.rdf");
        Path canonConvertedResultFilePath = Path.of("test-036.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-036.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-036.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-test-037
    // List is allowed as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusetest037rdfmsrdfnamesusetest037() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-037.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-037.nt"));
        
        Path convertedActionFilePath = Path.of("test-037.rdf");
        Path canonConvertedActionFilePath = Path.of("test-037.rdf");
        Path canonConvertedResultFilePath = Path.of("test-037.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-037.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/test-037.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-warn-001
    // foo is allowed with warnings as a node element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusewarn001rdfmsrdfnamesusewarn001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-001.nt"));
        
        Path convertedActionFilePath = Path.of("warn-001.rdf");
        Path canonConvertedActionFilePath = Path.of("warn-001.rdf");
        Path canonConvertedResultFilePath = Path.of("warn-001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-warn-002
    // foo is allowed with warnings as a property element name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusewarn002rdfmsrdfnamesusewarn002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-002.nt"));
        
        Path convertedActionFilePath = Path.of("warn-002.rdf");
        Path canonConvertedActionFilePath = Path.of("warn-002.rdf");
        Path canonConvertedResultFilePath = Path.of("warn-002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-rdf-names-use-warn-003
    // foo is allowed with warnings as a property attribute name.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsrdfnamesusewarn003rdfmsrdfnamesusewarn003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-003.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-003.nt"));
        
        Path convertedActionFilePath = Path.of("warn-003.rdf");
        Path canonConvertedActionFilePath = Path.of("warn-003.rdf");
        Path canonConvertedResultFilePath = Path.of("warn-003.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-003.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-rdf-names-use/warn-003.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-reification-required-test001
    // A parser is not required to generate a bag of reified statements for all description elements.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsreificationrequiredtest001rdfmsreificationrequiredtest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-reification-required/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-reification-required/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-reification-required/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-reification-required/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-seq-representation-test001
    // rdf:parseType="Collection" is parsed like the nonstandard daml:collection.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsseqrepresentationtest001rdfmsseqrepresentationtest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-seq-representation/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-seq-representation/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-seq-representation/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-seq-representation/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-syntax-incomplete-error001
    // The value of rdf:nodeID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompleteerror001rdfmssyntaxincompleteerror001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/error001.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-syntax-incomplete-error002
    // The value of rdf:nodeID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompleteerror002rdfmssyntaxincompleteerror002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/error002.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-syntax-incomplete-error003
    // The value of rdf:nodeID must match the XML Name production, (as modified by XML Namespaces).
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompleteerror003rdfmssyntaxincompleteerror003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/error003.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-syntax-incomplete-error004
    // Cannot have rdf:nodeID and rdf:ID.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompleteerror004rdfmssyntaxincompleteerror004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/error004.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-syntax-incomplete-error005
    // Cannot have rdf:nodeID and rdf:about.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompleteerror005rdfmssyntaxincompleteerror005() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/error005.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-syntax-incomplete-error006
    // Cannot have rdf:nodeID and rdf:resource.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompleteerror006rdfmssyntaxincompleteerror006() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/error006.rdf"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "rdfxml",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // rdfms-syntax-incomplete-test001
    // rdf:nodeID can be used to label a blank node.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompletetest001rdfmssyntaxincompletetest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-syntax-incomplete-test002
    // rdf:nodeID can be used to label a blank node. These have file scope and are distinct from any unlabelled blank nodes.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompletetest002rdfmssyntaxincompletetest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-syntax-incomplete-test003
    // On an rdf:Description or typed node rdf:nodeID behaves similarly to an rdf:about.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompletetest003rdfmssyntaxincompletetest003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test003.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test003.nt"));
        
        Path convertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedResultFilePath = Path.of("test003.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test003.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test003.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-syntax-incomplete-test004
    // On a property element rdf:nodeID behaves similarly to rdf:resource.
    @Test
    public void rdf11rdfxmlmanifestttlrdfmssyntaxincompletetest004rdfmssyntaxincompletetest004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test004.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test004.nt"));
        
        Path convertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedResultFilePath = Path.of("test004.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test004.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-syntax-incomplete/test004.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-uri-substructure-test001
    // Demonstrates the Recommended partitioning of a URI into a namespace part and a localname part
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsurisubstructuretest001rdfmsurisubstructuretest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-uri-substructure/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-uri-substructure/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-uri-substructure/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-uri-substructure/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-xmllang-test003
    // In-scope xml:lang applies to element content literal values
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsxmllangtest003rdfmsxmllangtest003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test003.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test003.nt"));
        
        Path convertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedResultFilePath = Path.of("test003.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test003.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test003.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-xmllang-test004
    // In-scope xml:lang applies to element content literal values
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsxmllangtest004rdfmsxmllangtest004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test004.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test004.nt"));
        
        Path convertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedResultFilePath = Path.of("test004.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test004.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test004.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-xmllang-test005
    // In-scope xml:lang applies to element content literal values
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsxmllangtest005rdfmsxmllangtest005() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test005.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test005.nt"));
        
        Path convertedActionFilePath = Path.of("test005.rdf");
        Path canonConvertedActionFilePath = Path.of("test005.rdf");
        Path canonConvertedResultFilePath = Path.of("test005.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test005.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test005.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfms-xmllang-test006
    // In-scope xml:lang applies to element content literal values
    @Test
    public void rdf11rdfxmlmanifestttlrdfmsxmllangtest006rdfmsxmllangtest006() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test006.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test006.nt"));
        
        Path convertedActionFilePath = Path.of("test006.rdf");
        Path canonConvertedActionFilePath = Path.of("test006.rdf");
        Path canonConvertedResultFilePath = Path.of("test006.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test006.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfms-xmllang/test006.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfs-domain-and-range-test001
    // a RDF Property may have more than one domain property
    @Test
    public void rdf11rdfxmlmanifestttlrdfsdomainandrangetest001rdfsdomainandrangetest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfs-domain-and-range/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfs-domain-and-range/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfs-domain-and-range/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfs-domain-and-range/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // rdfs-domain-and-range-test002
    // a RDF Property may have more than one domain property
    @Test
    public void rdf11rdfxmlmanifestttlrdfsdomainandrangetest002rdfsdomainandrangetest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfs-domain-and-range/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfs-domain-and-range/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfs-domain-and-range/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/rdfs-domain-and-range/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // unrecognised-xml-attributes-test001
    // Unrecognized attributes in the xml namespace should be ignored.
    @Test
    public void rdf11rdfxmlmanifestttlunrecognisedxmlattributestest001unrecognisedxmlattributestest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/unrecognised-xml-attributes/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/unrecognised-xml-attributes/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/unrecognised-xml-attributes/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/unrecognised-xml-attributes/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // unrecognised-xml-attributes-test002
    // Unrecognized attributes in the xml namespace should be ignored.
    @Test
    public void rdf11rdfxmlmanifestttlunrecognisedxmlattributestest002unrecognisedxmlattributestest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/unrecognised-xml-attributes/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/unrecognised-xml-attributes/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/unrecognised-xml-attributes/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/unrecognised-xml-attributes/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xml-canon-test001
    // Demonstrating the canonicalisation of XMLLiterals.
    @Test
    public void rdf11rdfxmlmanifestttlxmlcanontest001xmlcanontest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xml-canon/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xml-canon/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xml-canon/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xml-canon/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test001
    // xml:base applies to an rdf:ID on an rdf:Description element.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest001xmlbasetest001() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test001.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test001.nt"));
        
        Path convertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedActionFilePath = Path.of("test001.rdf");
        Path canonConvertedResultFilePath = Path.of("test001.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test001.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test001.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test002
    // xml:base applies to an rdf:resource attribute.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest002xmlbasetest002() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test002.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test002.nt"));
        
        Path convertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedActionFilePath = Path.of("test002.rdf");
        Path canonConvertedResultFilePath = Path.of("test002.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test002.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test002.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test003
    // xml:base applies to an rdf:about attribute.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest003xmlbasetest003() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test003.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test003.nt"));
        
        Path convertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedActionFilePath = Path.of("test003.rdf");
        Path canonConvertedResultFilePath = Path.of("test003.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test003.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test003.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test004
    // xml:base applies to an rdf:ID on a property element.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest004xmlbasetest004() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test004.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test004.nt"));
        
        Path convertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedActionFilePath = Path.of("test004.rdf");
        Path canonConvertedResultFilePath = Path.of("test004.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test004.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test004.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test006
    // xml:base scoping.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest006xmlbasetest006() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test006.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test006.nt"));
        
        Path convertedActionFilePath = Path.of("test006.rdf");
        Path canonConvertedActionFilePath = Path.of("test006.rdf");
        Path canonConvertedResultFilePath = Path.of("test006.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test006.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test006.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test007
    // example of relative URI resolution.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest007xmlbasetest007() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test007.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test007.nt"));
        
        Path convertedActionFilePath = Path.of("test007.rdf");
        Path canonConvertedActionFilePath = Path.of("test007.rdf");
        Path canonConvertedResultFilePath = Path.of("test007.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test007.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test007.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test008
    // example of empty same document ref resolution.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest008xmlbasetest008() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test008.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test008.nt"));
        
        Path convertedActionFilePath = Path.of("test008.rdf");
        Path canonConvertedActionFilePath = Path.of("test008.rdf");
        Path canonConvertedResultFilePath = Path.of("test008.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test008.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test008.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test009
    // Example of relative uri with absolute path resolution.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest009xmlbasetest009() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test009.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test009.nt"));
        
        Path convertedActionFilePath = Path.of("test009.rdf");
        Path canonConvertedActionFilePath = Path.of("test009.rdf");
        Path canonConvertedResultFilePath = Path.of("test009.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test009.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test009.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test010
    // Example of relative uri with net path resolution.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest010xmlbasetest010() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test010.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test010.nt"));
        
        Path convertedActionFilePath = Path.of("test010.rdf");
        Path canonConvertedActionFilePath = Path.of("test010.rdf");
        Path canonConvertedResultFilePath = Path.of("test010.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test010.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test010.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test011
    // Example of xml:base with no path component.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest011xmlbasetest011() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test011.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test011.nt"));
        
        Path convertedActionFilePath = Path.of("test011.rdf");
        Path canonConvertedActionFilePath = Path.of("test011.rdf");
        Path canonConvertedResultFilePath = Path.of("test011.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test011.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test011.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test013
    // With an xml:base with fragment the fragment is ignored.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest013xmlbasetest013() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test013.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test013.nt"));
        
        Path convertedActionFilePath = Path.of("test013.rdf");
        Path canonConvertedActionFilePath = Path.of("test013.rdf");
        Path canonConvertedResultFilePath = Path.of("test013.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test013.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test013.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

    // xmlbase-test014
    // Test output corrected to use correct base URL.
    @Test
    public void rdf11rdfxmlmanifestttlxmlbasetest014xmlbasetest014() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test014.rdf"));
        Path localResultFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test014.nt"));
        
        Path convertedActionFilePath = Path.of("test014.rdf");
        Path canonConvertedActionFilePath = Path.of("test014.rdf");
        Path canonConvertedResultFilePath = Path.of("test014.nt");

        // Converting the action file
        Process actionConversionCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "convert",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test014.rdf",
                "-if", "rdfxml",
                "-of", "ntriples",
                "-o", convertedActionFilePath.toString())
            .start();
        int actionConversionExitCode = actionConversionCommand.waitFor();

        // Canonicalization of the given result file
        Process resultCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-xml/xmlbase/test014.nt",
                "-if", "ntriples",
                "-o", canonConvertedResultFilePath.toString())
            .start();
        int resultCanonicalizationExitCode = resultCanonicalizationCommand.waitFor();

        // Canonicalization of the conversion result file
        Process convertedActionCanonicalizationCommand = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "canonicalize",
                "-i", convertedActionFilePath.toString(),
                "-if", "ntriples",
                "-o", canonConvertedActionFilePath.toString())
            .start();
        int convertedActionCanonicalizationExitCode = convertedActionCanonicalizationCommand.waitFor();

        // Comparison of the content of the file
        boolean comparisonResult = TestUtils.compareFilesLineByLine(canonConvertedActionFilePath, canonConvertedResultFilePath);

        assertEquals(0, resultCanonicalizationExitCode);
        assertEquals(0, actionConversionExitCode);
        assertEquals(0, convertedActionCanonicalizationExitCode);
        assertTrue(comparisonResult);
    }

}