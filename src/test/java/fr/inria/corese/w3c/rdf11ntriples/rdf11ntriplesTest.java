package fr.inria.corese.w3c.rdf11ntriples;

import fr.inria.corese.core.load.LoadException;
import fr.inria.corese.w3cJunitTestsGenerator.w3cTests.TestFileManager;
import fr.inria.corese.w3cJunitTestsGenerator.w3cTests.TestUtils;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.security.NoSuchAlgorithmException;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import org.junit.AssumptionViolatedException;
import org.junit.BeforeClass;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TestWatcher;
import org.junit.runner.Description;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

/**
 * Auto-generated JUnit test file for the W3C test suite: https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/manifest.ttl
 * This file was automatically generated by JUnitTestFileGenerator.java.
 * Generation date: 2024-10-25, Time: 16:31:50 Europe/Paris
 */
public class rdf11ntriplesTest {

    private static final String TEST_REPORT_FILE = Paths.get(System.getProperty("user.dir")).resolve("test/java/fr/inria/corese/w3c/rdf11ntriples/testReport.csv").toString();
    private static final String MANIFEST_URI = "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/manifest";
    private static final String EARL = "http://www.w3.org/ns/earl#";

    /**
     * Writes the test report to the file testReport.csv.
     *
     * @param testName The name of the test.
     * @param success  The status of the test.
     */
    private void writeTestReport(String testName, String success) {
        try {
            Path testReportPath = Paths.get(TEST_REPORT_FILE);
            Files.createDirectories(testReportPath.getParent());
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ssXXX");
            Files.write(testReportPath, (MANIFEST_URI + "#" + testName + "," + dtf.format(ZonedDateTime.now()) + "," + EARL + success + "\n").getBytes(), StandardOpenOption.APPEND, StandardOpenOption.CREATE);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Rule
    public TestWatcher watcher = new TestWatcher() {

        @Override
        protected void failed(Throwable e, Description description) {
            writeTestReport(description.getMethodName(), "failed");
        }

        @Override
        protected void succeeded(Description description) {
            writeTestReport(description.getMethodName(), "passed");
        }

        @Override
        protected void skipped(AssumptionViolatedException e, Description description) {
            writeTestReport(description.getMethodName(), "untested");
        }
    };

        // Create and clear the test report file
        @BeforeClass
        public static void createTestReportFile() {
            try {
                Path testReportPath = Paths.get(TEST_REPORT_FILE);
                Files.createDirectories(testReportPath.getParent());
                Files.write(testReportPath, "".getBytes());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    // comment_following_triple
    // Tests comments after a triple
    @Test
    public void rdf11rdfntriplesmanifestttlcomment_following_triplecomment_following_triple() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/comment_following_triple.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // langtagged_string
    // langtagged string "x"@en
    @Test
    public void rdf11rdfntriplesmanifestttllangtagged_stringlangtagged_string() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/langtagged_string.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // lantag_with_subtag
    // lantag with subtag "x"@en-us
    @Test
    public void rdf11rdfntriplesmanifestttllantag_with_subtaglantag_with_subtag() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/lantag_with_subtag.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal
    // literal """x"""
    @Test
    public void rdf11rdfntriplesmanifestttlliteralliteral() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_all_controls
    // literal_all_controls '\x00\x01\x02\x03\x04...'
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_all_controlsliteral_all_controls() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_all_controls.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_all_punctuation
    // literal_all_punctuation '!"#$%&()...'
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_all_punctuationliteral_all_punctuation() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_all_punctuation.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_ascii_boundaries
    // literal_ascii_boundaries '\x00\x26\x28...'
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_ascii_boundariesliteral_ascii_boundaries() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_ascii_boundaries.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_2_dquotes
    // literal with 2 dquotes """a""b"""
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_2_dquotesliteral_with_2_dquotes() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_2_dquotes.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_2_squotes
    // literal with 2 squotes "x''y"
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_2_squotesliteral_with_2_squotes() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_2_squotes.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_BACKSPACE
    // literal with BACKSPACE
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_backspaceliteral_with_backspace() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_BACKSPACE.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_CARRIAGE_RETURN
    // literal with CARRIAGE RETURN
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_carriage_returnliteral_with_carriage_return() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_CARRIAGE_RETURN.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_CHARACTER_TABULATION
    // literal with CHARACTER TABULATION
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_character_tabulationliteral_with_character_tabulation() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_CHARACTER_TABULATION.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_FORM_FEED
    // literal with FORM FEED
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_form_feedliteral_with_form_feed() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_FORM_FEED.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_LINE_FEED
    // literal with LINE FEED
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_line_feedliteral_with_line_feed() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_LINE_FEED.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_REVERSE_SOLIDUS
    // literal with REVERSE SOLIDUS
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_reverse_solidusliteral_with_reverse_solidus() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_REVERSE_SOLIDUS.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_REVERSE_SOLIDUS2
    // REVERSE SOLIDUS at end of literal
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_reverse_solidus2literal_with_reverse_solidus2() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_REVERSE_SOLIDUS2.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_UTF8_boundaries
    // literal_with_UTF8_boundaries '\x80\x7ff\x800\xfff...'
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_utf8_boundariesliteral_with_utf8_boundaries() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_UTF8_boundaries.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_dquote
    // literal with dquote "x"y"
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_dquoteliteral_with_dquote() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_dquote.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_numeric_escape4
    // literal with numeric escape4 'slash'u
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_numeric_escape4literal_with_numeric_escape4() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_numeric_escape4.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_numeric_escape8
    // literal with numeric escape8 'slash'u
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_numeric_escape8literal_with_numeric_escape8() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_numeric_escape8.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_squote
    // literal with squote "x'y"
    @Test
    public void rdf11rdfntriplesmanifestttlliteral_with_squoteliteral_with_squote() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/literal_with_squote.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // minimal_whitespace
    // tests absense of whitespace between subject, predicate, object and end-of-statement
    @Test
    public void rdf11rdfntriplesmanifestttlminimal_whitespaceminimal_whitespace() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/minimal_whitespace.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-bad-base-01
    // @base not allowed in N-Triples (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadbase01ntsyntaxbadbase01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-base-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-bnode-01
    // Colon in bnode label not allowed (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadbnode01ntsyntaxbadbnode01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-bnode-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-bnode-02
    // Colon in bnode label not allowed (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadbnode02ntsyntaxbadbnode02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-bnode-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-esc-01
    // Bad string escape (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadesc01ntsyntaxbadesc01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-esc-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-esc-02
    // Bad string escape (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadesc02ntsyntaxbadesc02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-esc-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-esc-03
    // Bad string escape (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadesc03ntsyntaxbadesc03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-esc-03.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-lang-01
    // langString with bad lang (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadlang01ntsyntaxbadlang01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-lang-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-num-01
    // no numbers in N-Triples (integer) (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadnum01ntsyntaxbadnum01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-num-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-num-02
    // no numbers in N-Triples (decimal) (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadnum02ntsyntaxbadnum02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-num-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-num-03
    // no numbers in N-Triples (float) (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadnum03ntsyntaxbadnum03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-num-03.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-prefix-01
    // @prefix not allowed in n-triples (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadprefix01ntsyntaxbadprefix01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-prefix-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-01
    // mismatching string literal open/close (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadstring01ntsyntaxbadstring01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-string-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-02
    // mismatching string literal open/close (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadstring02ntsyntaxbadstring02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-string-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-03
    // single quotes (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadstring03ntsyntaxbadstring03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-string-03.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-04
    // long single string literal (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadstring04ntsyntaxbadstring04() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-string-04.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-05
    // long double string literal (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadstring05ntsyntaxbadstring05() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-string-05.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-06
    // string literal with no end (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadstring06ntsyntaxbadstring06() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-string-06.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-07
    // string literal with no start (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadstring07ntsyntaxbadstring07() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-string-07.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-struct-01
    // N-Triples does not have objectList (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadstruct01ntsyntaxbadstruct01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-struct-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-struct-02
    // N-Triples does not have predicateObjectList (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbadstruct02ntsyntaxbadstruct02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-struct-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-01
    // Bad IRI : space (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbaduri01ntsyntaxbaduri01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-uri-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-02
    // Bad IRI : bad escape (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbaduri02ntsyntaxbaduri02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-uri-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-03
    // Bad IRI : bad long escape (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbaduri03ntsyntaxbaduri03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-uri-03.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-04
    // Bad IRI : character escapes not allowed (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbaduri04ntsyntaxbaduri04() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-uri-04.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-05
    // Bad IRI : character escapes not allowed (2) (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbaduri05ntsyntaxbaduri05() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-uri-05.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-06
    // Bad IRI : relative IRI not allowed in subject (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbaduri06ntsyntaxbaduri06() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-uri-06.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-07
    // Bad IRI : relative IRI not allowed in predicate (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbaduri07ntsyntaxbaduri07() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-uri-07.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-08
    // Bad IRI : relative IRI not allowed in object (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbaduri08ntsyntaxbaduri08() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-uri-08.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-09
    // Bad IRI : relative IRI not allowed in datatype (negative test)
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbaduri09ntsyntaxbaduri09() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bad-uri-09.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bnode-01
    // bnode subject
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbnode01ntsyntaxbnode01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bnode-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-bnode-02
    // bnode object
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbnode02ntsyntaxbnode02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bnode-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-bnode-03
    // Blank node labels may start with a digit
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxbnode03ntsyntaxbnode03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-bnode-03.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-datatypes-01
    // xsd:byte literal
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxdatatypes01ntsyntaxdatatypes01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-datatypes-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-datatypes-02
    // integer as xsd:string
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxdatatypes02ntsyntaxdatatypes02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-datatypes-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-file-01
    // Empty file
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxfile01ntsyntaxfile01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-file-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-file-02
    // Only comment
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxfile02ntsyntaxfile02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-file-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-file-03
    // One comment, one empty line
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxfile03ntsyntaxfile03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-file-03.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-str-esc-01
    // string literal with escaped newline
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxstresc01ntsyntaxstresc01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-str-esc-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-str-esc-02
    // string literal with Unicode escape
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxstresc02ntsyntaxstresc02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-str-esc-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-str-esc-03
    // string literal with long Unicode escape
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxstresc03ntsyntaxstresc03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-str-esc-03.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-string-01
    // string literal
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxstring01ntsyntaxstring01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-string-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-string-02
    // langString literal
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxstring02ntsyntaxstring02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-string-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-string-03
    // langString literal with region
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxstring03ntsyntaxstring03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-string-03.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-subm-01
    // Submission test from Original RDF Test Cases
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxsubm01ntsyntaxsubm01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-subm-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-uri-01
    // Only IRIs
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxuri01ntsyntaxuri01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-uri-01.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-uri-02
    // IRIs with Unicode escape
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxuri02ntsyntaxuri02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-uri-02.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-uri-03
    // IRIs with long Unicode escape
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxuri03ntsyntaxuri03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-uri-03.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-uri-04
    // Legal IRIs
    @Test
    public void rdf11rdfntriplesmanifestttlntsyntaxuri04ntsyntaxuri04() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        Path localActionFile = TestFileManager.getLocalFilePath(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-triples/nt-syntax-uri-04.nt"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", localActionFile.toString(),
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

}