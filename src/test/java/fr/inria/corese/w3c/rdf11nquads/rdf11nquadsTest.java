package fr.inria.corese.w3c.rdf11nquads;

import fr.inria.corese.core.load.LoadException;
import fr.inria.corese.w3cJunitTestsGenerator.w3cTests.TestFileManager;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.security.NoSuchAlgorithmException;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import org.junit.AssumptionViolatedException;
import org.junit.BeforeClass;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TestWatcher;
import org.junit.runner.Description;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

/**
 * Auto-generated JUnit test file for the W3C test suite: https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/manifest.ttl
 * This file was automatically generated by JUnitTestFileGenerator.java.
 * Generation date: 2024-09-27, Time: 14:23:28 Europe/Paris
 */
public class rdf11nquadsTest {

    private static final String TEST_REPORT_FILE = Paths.get(System.getProperty("user.dir")).resolve("test/java/fr/inria/corese/w3c/rdf11nquads/testReport.csv").toString();
    private static final String MANIFEST_URI = "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/manifest";
    private static final String EARL = "http://www.w3.org/ns/earl#";

    /**
     * Writes the test report to the file testReport.csv.
     *
     * @param testName The name of the test.
     * @param success  The status of the test.
     */
    private void writeTestReport(String testName, String success) {
        try {
            Path testReportPath = Paths.get(TEST_REPORT_FILE);
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ssXXX");
            Files.write(testReportPath, (MANIFEST_URI + "#" + testName + "," + dtf.format(ZonedDateTime.now()) + "," + EARL + success + "\n").getBytes(), StandardOpenOption.APPEND);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Rule
    public TestWatcher watcher = new TestWatcher() {

        @Override
        protected void failed(Throwable e, Description description) {
            writeTestReport(description.getMethodName(), "failed");
        }

        @Override
        protected void succeeded(Description description) {
            writeTestReport(description.getMethodName(), "passed");
        }

        @Override
        protected void skipped(AssumptionViolatedException e, Description description) {
            writeTestReport(description.getMethodName(), "untested");
        }
    };

        // Create and clear the test report file
        @BeforeClass
        public static void createTestReportFile() {
            try {
                Path testReportPath = Paths.get(TEST_REPORT_FILE);
                Files.write(testReportPath, "".getBytes());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    // comment_following_triple
    // Tests comments after a triple
    @Test
    public void comment_following_triple() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/comment_following_triple.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/comment_following_triple.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // langtagged_string
    // langtagged string "x"@en
    @Test
    public void langtagged_string() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/langtagged_string.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/langtagged_string.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // lantag_with_subtag
    // lantag with subtag "x"@en-us
    @Test
    public void lantag_with_subtag() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/lantag_with_subtag.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/lantag_with_subtag.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal
    // literal """x"""
    @Test
    public void literal() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_all_controls
    // literal_all_controls '\x00\x01\x02\x03\x04...'
    @Test
    public void literal_all_controls() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_all_controls.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_all_controls.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_all_punctuation
    // literal_all_punctuation '!"#$%&()...'
    @Test
    public void literal_all_punctuation() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_all_punctuation.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_all_punctuation.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_ascii_boundaries
    // literal_ascii_boundaries '\x00\x26\x28...'
    @Test
    public void literal_ascii_boundaries() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_ascii_boundaries.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_ascii_boundaries.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_2_dquotes
    // literal with 2 squotes """a""b"""
    @Test
    public void literal_with_2_dquotes() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_2_dquotes.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_2_dquotes.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_2_squotes
    // literal with 2 squotes "x''y"
    @Test
    public void literal_with_2_squotes() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_2_squotes.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_2_squotes.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_BACKSPACE
    // literal with BACKSPACE
    @Test
    public void literal_with_backspace() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_BACKSPACE.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_BACKSPACE.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_CARRIAGE_RETURN
    // literal with CARRIAGE RETURN
    @Test
    public void literal_with_carriage_return() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_CARRIAGE_RETURN.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_CARRIAGE_RETURN.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_CHARACTER_TABULATION
    // literal with CHARACTER TABULATION
    @Test
    public void literal_with_character_tabulation() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_CHARACTER_TABULATION.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_CHARACTER_TABULATION.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_FORM_FEED
    // literal with FORM FEED
    @Test
    public void literal_with_form_feed() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_FORM_FEED.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_FORM_FEED.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_LINE_FEED
    // literal with LINE FEED
    @Test
    public void literal_with_line_feed() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_LINE_FEED.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_LINE_FEED.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_REVERSE_SOLIDUS
    // literal with REVERSE SOLIDUS
    @Test
    public void literal_with_reverse_solidus() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_REVERSE_SOLIDUS.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_REVERSE_SOLIDUS.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_REVERSE_SOLIDUS2
    // REVERSE SOLIDUS at end of literal
    @Test
    public void literal_with_reverse_solidus2() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_REVERSE_SOLIDUS2.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_REVERSE_SOLIDUS2.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_UTF8_boundaries
    // literal_with_UTF8_boundaries '\x80\x7ff\x800\xfff...'
    @Test
    public void literal_with_utf8_boundaries() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_UTF8_boundaries.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_UTF8_boundaries.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_dquote
    // literal with dquote "x"y"
    @Test
    public void literal_with_dquote() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_dquote.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_dquote.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_numeric_escape4
    // literal with numeric escape4
    @Test
    public void literal_with_numeric_escape4() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_numeric_escape4.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_numeric_escape4.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_numeric_escape8
    // literal with numeric escape8 \U
    @Test
    public void literal_with_numeric_escape8() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_numeric_escape8.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_numeric_escape8.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // literal_with_squote
    // literal with squote "x'y"
    @Test
    public void literal_with_squote() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_squote.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/literal_with_squote.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // minimal_whitespace
    // tests absense of whitespace between subject, predicate, object and end-of-statement
    @Test
    public void minimal_whitespace() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/minimal_whitespace.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/minimal_whitespace.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-bad-literal-01
    // Graph name may not be a simple literal (negative test)
    @Test
    public void nqsyntaxbadliteral01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-literal-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-literal-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nq-syntax-bad-literal-02
    // Graph name may not be a language tagged literal (negative test)
    @Test
    public void nqsyntaxbadliteral02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-literal-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-literal-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nq-syntax-bad-literal-03
    // Graph name may not be a datatyped literal (negative test)
    @Test
    public void nqsyntaxbadliteral03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-literal-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-literal-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nq-syntax-bad-quint-01
    // N-Quads does not have a fifth element (negative test)
    @Test
    public void nqsyntaxbadquint01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-quint-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-quint-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nq-syntax-bad-uri-01
    // Graph name URI must be absolute (negative test)
    @Test
    public void nqsyntaxbaduri01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-uri-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bad-uri-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nq-syntax-bnode-01
    // BNode graph with URI triple
    @Test
    public void nqsyntaxbnode01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-bnode-02
    // BNode graph with BNode subject
    @Test
    public void nqsyntaxbnode02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-bnode-03
    // BNode graph with BNode object
    @Test
    public void nqsyntaxbnode03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-bnode-04
    // BNode graph with simple literal
    @Test
    public void nqsyntaxbnode04() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-04.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-04.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-bnode-05
    // BNode graph with language tagged literal
    @Test
    public void nqsyntaxbnode05() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-05.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-05.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-bnode-06
    // BNode graph with datatyped literal
    @Test
    public void nqsyntaxbnode06() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-06.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-bnode-06.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-uri-01
    // URI graph with URI triple
    @Test
    public void nqsyntaxuri01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-uri-02
    // URI graph with BNode subject
    @Test
    public void nqsyntaxuri02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-uri-03
    // URI graph with BNode object
    @Test
    public void nqsyntaxuri03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-uri-04
    // URI graph with simple literal
    @Test
    public void nqsyntaxuri04() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-04.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-04.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-uri-05
    // URI graph with language tagged literal
    @Test
    public void nqsyntaxuri05() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-05.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-05.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nq-syntax-uri-06
    // URI graph with datatyped literal
    @Test
    public void nqsyntaxuri06() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-06.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nq-syntax-uri-06.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-bad-base-01
    // @base not allowed in N-Quads (negative test)
    @Test
    public void ntsyntaxbadbase01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-base-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-base-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-bnode-01
    // Colon in bnode label not allowed (negative test)
    @Test
    public void ntsyntaxbadbnode01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-bnode-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-bnode-01.nq",
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-bnode-02
    // Colon in bnode label not allowed (negative test)
    @Test
    public void ntsyntaxbadbnode02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-bnode-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-bnode-02.nq",
                "-if", "ntriples",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-esc-01
    // Bad string escape (negative test)
    @Test
    public void ntsyntaxbadesc01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-esc-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-esc-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-esc-02
    // Bad string escape (negative test)
    @Test
    public void ntsyntaxbadesc02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-esc-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-esc-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-esc-03
    // Bad string escape (negative test)
    @Test
    public void ntsyntaxbadesc03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-esc-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-esc-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-lang-01
    // langString with bad lang (negative test)
    @Test
    public void ntsyntaxbadlang01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-lang-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-lang-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-num-01
    // no numbers in N-Quads (integer) (negative test)
    @Test
    public void ntsyntaxbadnum01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-num-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-num-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-num-02
    // no numbers in N-Quads (decimal) (negative test)
    @Test
    public void ntsyntaxbadnum02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-num-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-num-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-num-03
    // no numbers in N-Quads (float) (negative test)
    @Test
    public void ntsyntaxbadnum03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-num-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-num-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-prefix-01
    // @prefix not allowed in N-Quads (negative test)
    @Test
    public void ntsyntaxbadprefix01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-prefix-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-prefix-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-01
    // mismatching string literal open/close (negative test)
    @Test
    public void ntsyntaxbadstring01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-02
    // mismatching string literal open/close (negative test)
    @Test
    public void ntsyntaxbadstring02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-03
    // single quotes (negative test)
    @Test
    public void ntsyntaxbadstring03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-04
    // long single string literal (negative test)
    @Test
    public void ntsyntaxbadstring04() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-04.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-04.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-05
    // long double string literal (negative test)
    @Test
    public void ntsyntaxbadstring05() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-05.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-05.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-06
    // string literal with no end (negative test)
    @Test
    public void ntsyntaxbadstring06() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-06.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-06.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-string-07
    // string literal with no start (negative test)
    @Test
    public void ntsyntaxbadstring07() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-07.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-string-07.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-struct-01
    // N-Quads does not have objectList (negative test)
    @Test
    public void ntsyntaxbadstruct01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-struct-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-struct-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-struct-02
    // N-Quads does not have predicateObjectList (negative test)
    @Test
    public void ntsyntaxbadstruct02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-struct-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-struct-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-01
    // Bad IRI : space (negative test)
    @Test
    public void ntsyntaxbaduri01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-02
    // Bad IRI : bad escape (negative test)
    @Test
    public void ntsyntaxbaduri02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-03
    // Bad IRI : bad long escape (negative test)
    @Test
    public void ntsyntaxbaduri03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-04
    // Bad IRI : character escapes not allowed (negative test)
    @Test
    public void ntsyntaxbaduri04() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-04.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-04.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-05
    // Bad IRI : character escapes not allowed (2) (negative test)
    @Test
    public void ntsyntaxbaduri05() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-05.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-05.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-06
    // Bad IRI : relative IRI not allowed in subject (negative test)
    @Test
    public void ntsyntaxbaduri06() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-06.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-06.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-07
    // Bad IRI : relative IRI not allowed in predicate (negative test)
    @Test
    public void ntsyntaxbaduri07() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-07.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-07.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-08
    // Bad IRI : relative IRI not allowed in object (negative test)
    @Test
    public void ntsyntaxbaduri08() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-08.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-08.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bad-uri-09
    // Bad IRI : relative IRI not allowed in datatype (negative test)
    @Test
    public void ntsyntaxbaduri09() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-09.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bad-uri-09.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertNotEquals(0, command.waitFor());
    }

    // nt-syntax-bnode-01
    // bnode subject
    @Test
    public void ntsyntaxbnode01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bnode-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bnode-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-bnode-02
    // bnode object
    @Test
    public void ntsyntaxbnode02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bnode-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bnode-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-bnode-03
    // Blank node labels may start with a digit
    @Test
    public void ntsyntaxbnode03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bnode-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-bnode-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-datatypes-01
    // xsd:byte literal
    @Test
    public void ntsyntaxdatatypes01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-datatypes-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-datatypes-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-datatypes-02
    // integer as xsd:string
    @Test
    public void ntsyntaxdatatypes02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-datatypes-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-datatypes-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-file-01
    // Empty file
    @Test
    public void ntsyntaxfile01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-file-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-file-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-file-02
    // Only comment
    @Test
    public void ntsyntaxfile02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-file-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-file-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-file-03
    // One comment, one empty line
    @Test
    public void ntsyntaxfile03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-file-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-file-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-str-esc-01
    // string literal with escaped newline
    @Test
    public void ntsyntaxstresc01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-str-esc-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-str-esc-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-str-esc-02
    // string literal with Unicode escape
    @Test
    public void ntsyntaxstresc02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-str-esc-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-str-esc-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-str-esc-03
    // string literal with long Unicode escape
    @Test
    public void ntsyntaxstresc03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-str-esc-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-str-esc-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-string-01
    // string literal
    @Test
    public void ntsyntaxstring01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-string-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-string-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-string-02
    // langString literal
    @Test
    public void ntsyntaxstring02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-string-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-string-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-string-03
    // langString literal with region
    @Test
    public void ntsyntaxstring03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-string-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-string-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-subm-01
    // Submission test from Original RDF Test Cases
    @Test
    public void ntsyntaxsubm01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-subm-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-subm-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-uri-01
    // Only IRIs
    @Test
    public void ntsyntaxuri01() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-uri-01.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-uri-01.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-uri-02
    // IRIs with Unicode escape
    @Test
    public void ntsyntaxuri02() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-uri-02.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-uri-02.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-uri-03
    // IRIs with long Unicode escape
    @Test
    public void ntsyntaxuri03() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-uri-03.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-uri-03.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

    // nt-syntax-uri-04
    // Legal IRIs
    @Test
    public void ntsyntaxuri04() throws IOException, NoSuchAlgorithmException, InterruptedException {
        // Load action file
        TestFileManager.loadFile(URI.create("https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-uri-04.nq"));
        Process command = new ProcessBuilder().inheritIO().command(
                "java", "-jar", "src/test/resources/corese-command.jar", "sparql",
                "-i", "https://w3c.github.io/rdf-tests/rdf/rdf11/rdf-n-quads/nt-syntax-uri-04.nq",
                "-if", "nquads",
                "-of", "csv",
                "-q", "src/test/resources/sparqlSelectBasic.rq")
            .start();
        assertEquals(0, command.waitFor());
    }

}